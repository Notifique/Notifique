buildscript {
  ext.versions = [
      'androidGradlePlugin': '3.2.1',
      'compileSdk': 28,
      'coroutines': '0.22.5',
      'dagger': '2.15',
      'errorProne': '2.2.0',
      'errorProneGradlePlugin': '0.0.13',
      'junit': '4.12',
      'kotlin': '1.2.51',
      'okio': '1.14.0',
      'paging': '1.0.0-alpha7',
      'room': '1.0.0',
      'supportLibrary': '27.1.0',
      'truth': '0.40'
  ]

  ext.deps = [
          'androidGradlePlugin': "com.android.tools.build:gradle:$versions.androidGradlePlugin",
          'dagger': [
          'compiler': "com.google.dagger:dagger-compiler:$versions.dagger",
          'runtime': "com.google.dagger:dagger:$versions.dagger"
      ],
          'daggerAndroid': [
          'compiler': "com.google.dagger:dagger-android-processor:$versions.dagger",
          'runtime': "com.google.dagger:dagger-android:$versions.dagger"
      ],
          'errorProneGradlePlugin': "net.ltgt.gradle:gradle-errorprone-plugin:$versions.errorProneGradlePlugin",
      'junit': "junit:junit:$versions.junit",
      'kotlin': [
          'coroutines': "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
          'coroutinesAndroid': "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",
          'gradlePlugin': "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
          'stdlibJre7': "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"
      ],
      'okio': "com.squareup.okio:okio:$versions.okio",
      'paging': 'androidx.paging:paging-runtime:2.0.0',
      'room': [
          'compiler': 'androidx.room:room-compiler:2.0.0',
          'runtime': 'androidx.room:room-runtime:2.0.0'
      ],
      'supportLibrary': [
          'annotations': 'androidx.annotation:annotation:1.0.0',
          'appCompat': 'androidx.appcompat:appcompat:1.0.0',
          'recyclerView': 'androidx.recyclerview:recyclerview:1.0.0'
      ],
      'truth': "com.google.truth:truth:$versions.truth"
  ]

  dependencies {
    classpath deps.androidGradlePlugin
    classpath deps.errorProneGradlePlugin
    classpath deps.kotlin.gradlePlugin
  }

  repositories {
    mavenCentral()
    google()
    maven { url 'https://plugins.gradle.org/m2/' }
  }
}

allprojects {
  apply plugin: 'net.ltgt.errorprone'
  apply plugin: 'checkstyle'

  tasks.withType(JavaCompile) {
    options.compilerArgs += [
        '-Xep:UnnecessaryDefaultInEnumSwitch:ERROR',
        '-Xep:TypeParameterUnusedInFormals:ERROR',
        '-Xep:OperatorPrecedence:ERROR',
        '-Xep:ReferenceEquality:ERROR',
        '-Xep:FloatingPointLiteralPrecision:ERROR',
        '-Xep:DateFormatConstant:ERROR'
    ]
  }

  task checkstyle(type: Checkstyle) {
    configFile rootProject.file('checkstyle.xml')
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
  }

  checkstyle {
    toolVersion = '7.7'
  }

  repositories {
    mavenCentral()
    jcenter()
    google() // Needed for Lint.
  }

  configurations.all {
    resolutionStrategy {
      eachDependency { details ->
        // Force all of the primary support libraries to use the same version.
        if (details.requested.group == 'com.android.support') {
          details.useVersion versions.supportLibrary
        }
        // Force all the error-prone dependencies to use the same version.
        if (details.requested.group == 'com.google.errorprone' &&
            details.requested.name.startsWith('error_prone_')) {
          details.useVersion versions.errorProne
        }
      }
    }
  }

  afterEvaluate { project ->
    project.configurations.all {
      resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.version.endsWith('+')) {
          throw new GradleException(
              "Wildcard dependency forbidden: ${requested.group}:${requested.name}:${requested.version}")
        }
      }
    }
  }
}

subprojects {
  afterEvaluate {
    tasks.findByName('check').dependsOn('checkstyle')
  }
}
