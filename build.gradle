buildscript {
  ext.versions = [
      'androidAnnotations'   : '1.2.0',
      'androidGradlePlugin'  : '7.0.3',
      'appcompat'            : '1.3.1',
      'compileSdk'           : 31,
      'coroutines'           : '1.5.2',
      'dagger'               : '2.39.1',
      'junit'                : '4.13.2',
      'kotlin'               : '1.5.31',
      'leakcanary'           : '2.7',
      'material'             : '1.4.0',
      'moshi'                : '1.12.0',
      'okhttp'               : '4.9.2',
      'okio'                 : '2.10.0',
      'paging'               : '2.1.2',
      'recyclerview'         : '1.2.1',
      'recyclerviewSelection': '1.1.0',
      'retrofit'             : '2.9.0',
      'retrofitLogging'      : '0.10.0',
      'sqldelight'           : '1.5.2',
      'truth'                : '1.1.3'
  ]

  ext.deps = [
      'androidAnnotations' : "androidx.annotation:annotation:$versions.androidAnnotations",
      'androidGradlePlugin': "com.android.tools.build:gradle:$versions.androidGradlePlugin",
      'appcompat'          : "androidx.appcompat:appcompat:$versions.appcompat",
      'dagger'             : [
          'compiler': "com.google.dagger:dagger-compiler:$versions.dagger",
          'runtime' : "com.google.dagger:dagger:$versions.dagger"
      ],
      'daggerAndroid'      : [
          'compiler': "com.google.dagger:dagger-android-processor:$versions.dagger",
          'runtime' : "com.google.dagger:dagger-android:$versions.dagger"
      ],
      'junit'              : "junit:junit:$versions.junit",
      'kotlin'             : [
          'coroutines'       : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
          'coroutinesAndroid': "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",
          'gradlePlugin'     : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
          'stdlibJdk8'       : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
      ],
      'leakcanary'         : "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary",
      'material'         : "com.google.android.material:material:$versions.material",
      'moshi'              : [
          'core'         : "com.squareup.moshi:moshi:$versions.moshi",
          'kotlinCodegen': "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
      ],
      'okhttp'             : [
          'core'         : "com.squareup.okhttp3:okhttp:$versions.okhttp",
          'mockwebserver': "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
      ],
      'okio'               : "com.squareup.okio:okio:$versions.okio",
      'paging'             : "androidx.paging:paging-runtime:$versions.paging",
      'recyclerview'       : [
          'core'     : "androidx.recyclerview:recyclerview:$versions.recyclerview",
          'selection': "androidx.recyclerview:recyclerview-selection:$versions.recyclerviewSelection"
      ],
      'retrofit'           : [
          'core'          : "com.squareup.retrofit2:retrofit:$versions.retrofit",
          'logging'       : "com.nightlynexus.logging-retrofit:logging:$versions.retrofitLogging",
          'moshiConverter': "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
      ],
      'sqldelight'         : [
          'androidDriver'          : "com.squareup.sqldelight:android-driver:$versions.sqldelight",
          'androidPagingExtensions': "com.squareup.sqldelight:android-paging-extensions:$versions.sqldelight",
          'gradlePlugin'           : "com.squareup.sqldelight:gradle-plugin:$versions.sqldelight"
      ],
      'truth'              : "com.google.truth:truth:$versions.truth"
  ]

  dependencies {
    classpath deps.androidGradlePlugin
    classpath deps.kotlin.gradlePlugin
    classpath deps.sqldelight.gradlePlugin
  }

  repositories {
    google()
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
  }
}

allprojects {
  repositories {
    google()
    mavenCentral()
  }

  afterEvaluate { project ->
    project.configurations.all {
      resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.version.endsWith('+')) {
          throw new GradleException(
              "Wildcard dependency forbidden: ${requested.group}:${requested.name}:${requested.version}")
        }
      }
    }
  }
}
